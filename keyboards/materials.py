from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from config.settings import MATERIAL_CATEGORIES
from data.materials import get_materials_by_category

def get_material_keyboard() -> ReplyKeyboardMarkup:
    """Get the material management keyboard layout."""
    return ReplyKeyboardMarkup(
        keyboard=[
            [
                KeyboardButton(text="üìù –î–æ–±–∞–≤–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª"),
                KeyboardButton(text="üìä –ü–æ–∫–∞–∑–∞—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã")
            ],
            [
                KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥"),
                KeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
            ]
        ],
        resize_keyboard=True,
        one_time_keyboard=False
    )

def get_material_categories() -> ReplyKeyboardMarkup:
    """Get the material categories keyboard layout."""
    return ReplyKeyboardMarkup(
        keyboard=[
            [
                KeyboardButton(text="–°—Ç–µ–Ω—ã"),
                KeyboardButton(text="–ü–æ—Ç–æ–ª–æ–∫")
            ],
            [
                KeyboardButton(text="–ü–æ–ª"),
                KeyboardButton(text="–î–≤–µ—Ä–∏")
            ],
            [
                KeyboardButton(text="–û–∫–Ω–∞"),
                KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
            ],
            [
                KeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
            ]
        ],
        resize_keyboard=True,
        one_time_keyboard=False
    )

def get_material_units() -> ReplyKeyboardMarkup:
    """Get the material units keyboard layout."""
    return ReplyKeyboardMarkup(
        keyboard=[
            [
                KeyboardButton(text="–º¬≤"),
                KeyboardButton(text="–º¬≥")
            ],
            [
                KeyboardButton(text="—à—Ç"),
                KeyboardButton(text="–∫–≥")
            ],
            [
                KeyboardButton(text="–ª"),
                KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
            ],
            [
                KeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
            ]
        ],
        resize_keyboard=True,
        one_time_keyboard=False
    )

def get_material_categories_keyboard() -> ReplyKeyboardMarkup:
    """Create keyboard with material categories."""
    keyboard = []
    row = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ 2 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ —Å—Ç—Ä–æ–∫—É
    for i, value in enumerate(MATERIAL_CATEGORIES.values()):
        row.append(KeyboardButton(text=value))
        
        # –ü–æ—Å–ª–µ –∫–∞–∂–¥—ã—Ö 2 –∫–Ω–æ–ø–æ–∫ –∏–ª–∏ –µ—Å–ª–∏ —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω—è—è –∫–Ω–æ–ø–∫–∞, –¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É
        if len(row) == 2 or i == len(MATERIAL_CATEGORIES) - 1:
            keyboard.append(row)
            row = []
    
    keyboard.append([KeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")])
    
    return ReplyKeyboardMarkup(
        keyboard=keyboard,
        resize_keyboard=True
    )

def get_materials_keyboard(category: str) -> ReplyKeyboardMarkup:
    """Create keyboard with materials for specific category."""
    materials = get_materials_by_category(category)
    keyboard = []
    row = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ 2 –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –≤ —Å—Ç—Ä–æ–∫—É
    for i, material in enumerate(materials.values()):
        row.append(KeyboardButton(text=material.name))
        
        # –ü–æ—Å–ª–µ –∫–∞–∂–¥—ã—Ö 2 –∫–Ω–æ–ø–æ–∫ –∏–ª–∏ –µ—Å–ª–∏ —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω—è—è –∫–Ω–æ–ø–∫–∞, –¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É
        if len(row) == 2 or i == len(materials) - 1:
            keyboard.append(row)
            row = []
    
    keyboard.append([KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥"), KeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")])
    
    return ReplyKeyboardMarkup(
        keyboard=keyboard,
        resize_keyboard=True
    ) 