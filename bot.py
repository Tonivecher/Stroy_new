import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.filters.command import Command
from aiogram.enums import ParseMode
from config import BOT_TOKEN

# Configure logging
logging.basicConfig(level=logging.INFO)

# Initialize bot and dispatcher
bot = Bot(token=BOT_TOKEN, parse_mode=ParseMode.HTML)
dp = Dispatcher()

@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö —Ä–∞—Å—á–µ—Ç–æ–≤.\n"
        "–ü–æ–∫–∞ —è —Ç–æ–ª—å–∫–æ —É—á—É—Å—å, –Ω–æ —Å–∫–æ—Ä–æ —Å–º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º —Å:\n"
        "- –†–∞—Å—á–µ—Ç–æ–º –ø–ª–æ—â–∞–¥–∏ –ø–æ–º–µ—â–µ–Ω–∏–π\n"
        "- –ü–æ–¥–±–æ—Ä–æ–º –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤\n"
        "- –†–∞—Å—á–µ—Ç–æ–º —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ä–µ–º–æ–Ω—Ç–∞\n"
        "- –°–æ–∑–¥–∞–Ω–∏–µ–º –æ—Ç—á–µ—Ç–æ–≤\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏."
    )

@dp.message(Command("help"))
async def cmd_help(message: types.Message):
    await message.answer(
        "üîç <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n\n"
        "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n\n"
        "‚ùóÔ∏è –û—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ."
    )

async def main():
    # Delete webhook before polling
    await bot.delete_webhook(drop_pending_updates=True)
    # Start polling
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main()) 